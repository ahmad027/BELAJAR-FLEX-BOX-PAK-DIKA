# Latihan membuat responsive navbar menggunakan flexbox part 1 

-> Untuk mengatur padding di reset pada awal, tulis code berikut pada css 

    * {
        margin: 0;
        padding: 0;
    }

-> Cari font di google font, 
    https://fonts.google.com/

    cari font yang diinginkan, selanjutnya get font, get embed code , pilih tab web

    ada 2 cara import di web, dengan meletakkan di meta html, atau import di css-nya, kita coba yang di cssnya, ingat copy mulai @import url, tanpa stylenya 

    misal, copy di cssnya 

        @import url('https://fonts.googleapis.com/css2?family=Pacifico&display=swap');

    setting font-familynya sesuai intruksi, misal 

        nav .logo {
            font-family: 'Pacifico', cursive;
        }

-> untuk menyetting agar tulisan pada nav ditengah2, bisa di setting seperti di bawah 

    nav {
        display: flex;
        background-color: rgb(180, 78, 232);
        justify-content: space-around;
        height: 50px; -> memanfaatkan height
        color: rgb(234, 192, 255);
        align-items: center; -> dan juga memanfaatkan align-items: center
    }

-> Ukuran Tablet (max-width: 760px), ukuran mobile (max-width: 576px)

    /* Ukuran tablet */

        @media screen and (max-width: 760px) {
            nav ul {
                width: 50%;
            }
        }

        /* Ukuran mobile */

        @media screen and (max-width: 576px) {
            nav ul {
                display: none;
            }
        }

-> Untuk mengubah tulisan navigasi menajdi hamburger,
    - membuat ul li a, tidak nampak 

        /* Ukuran mobile */

        @media screen and (max-width: 576px) {
            nav ul {
                display: none;
            }
        }

    - membuat tambahan span untuk membuat garis2 hamburger 

        <div class="menu-toggle">
            <span></span>
            <span></span>
            <span></span>
        </div>

    - setting pada cssnya

        .menu-toggle {
            display: flex;
            flex-direction: column; -> agar garis2 hamburger sejajar ke bawah 
            height: 20px; -> dikasih tinggi agar bisa diatur kesejajaran garis 
            justify-content: space-between; -> jarak antar garis bisa rata 
        }

        .menu-toggle span {
            display: block;
            width: 28px;
            height: 3px;
            background-color: rgb(234, 192, 255);
            border-radius: 3px;
         }

-> Untuk membuat agar garis hamburger bekerja, kita bisa menggunakan checkbox, buat input sebelum span 

      <div class="menu-toggle">
        <input type="checkbox" /> --> menambahkan input 
        <span></span>
        <span></span>
        <span></span>
      </div>

- setting css checkbox pada input, jangan lupa tambahakan position: relative pada parent (menu-toggle)

    .menu-toggle {
        position: relative;
    }

    .menu-toggle input {
        position: absolute; -> agar bisa diatur letaknya
        width: 40px;
        height: 28px;
        left: -5px;
        top: -5px;
        opacity: 0;
        cursor: pointer; -> agar terlihat saat mau diklik
    }

- Membuat animasi pada garis hamburgernya, ada 3 garis hamburger sebagai child ke 2,3,4 dari parent menu-toggle, child 1 adalah input checkbox, 

    .menu-toggle nth-child (anak ke-n), misal nth-child(2), jadi child yang kedua, yaitu garis hamburger yang pertama 

    .menu-toggle input:checked ~ span:nth-child(2) {
        background-color: red;
    }

    bacanya ( jika input:terceklist yang berada pada menu-toggle, cari css yang sibling / saudara yang merupakan span, posisi anak kedua dari men-toggle )

- Untuk mengubah rotate garis pertama, harus menggunakan transform-origin: 0 0, agar ujungnya pada pojok kiri, baru di keadaan akhir di kasih sudut angle garis 

    .menu-toggle span:nth-child(2) {
        transform-origin: 0 0; -> agar pojok rotasi bisa diujung kiri 
    }

    .menu-toggle input:checked ~ span:nth-child(2) {
        transform: rotate(45deg); -> kaedaan akhir garis berotasi 45derajat 
    }

- untuk mengubah garis ketiga, tinggal diganti transform-origin: 0 100%, dan pada keadaan akhir transform: rotate(-45deg)

    
    .menu-toggle span:nth-child(4) {
        transform-origin: 0 100%;
    }

    .menu-toggle input:checked ~ span:nth-child(4) {
        transform: rotate(-45deg);
    }

    
- Agar lebih rapi persilangannya, tambah translate(-1px, -1px) dan translate(-1px, 0)

    .menu-toggle input:checked ~ span:nth-child(2) {
        transform: rotate(45deg) translate(-1px, -1px);
    }

    .menu-toggle input:checked ~ span:nth-child(4) {
        transform: rotate(-45deg) translate(-1px, 0);
    }

- untuk garis yang ketiga, menambahkan efek scale 0

    .menu-toggle input:checked ~ span:nth-child(3) {
        transform: scale(0);
    }

- untuk mengantisipasi tak bisa diklik, setting input z-index: 2

    .menu-toggle input {
        z-index: 2;
    }

- jangan lupa .menu-toggle di ubah display: none, sedangkan pada tampilan mobile(576px) .menu-toggle diubah display: flex 

    /* Ukuran mobile */

    @media screen and (max-width: 576px) {
        nav ul {
            display: none;
        }

        .menu-toggle {
            display: flex;
        }
    }

- untuk mengatur agar menu ul bisa terlihat ssat di kil setting seperti di bawah 

   
    @media screen and (max-width: 576px) {
        nav ul {
            position: absolute;
            top: 0; -> agar di atas
            right: 0; -> agar ke kanan
            flex-direction: column; -> agar beururt ke bawah 
            height: 100vh;
            background-color: rgb(180, 78, 232);
            align-items: center;
            justify-content: space-evenly; -> agar bisa rapi sapace nya 
            width: 80%;
            z-index: -1; -> agar terletak di bawah 
            transform: translateX(100%); -> agar kelihatan menghilang 
            transition: all 1s;
        }

        pada body ditambah 

        body {
            overflowX: hidden;
        }

        .menu-toggle {
            display: flex;
        }

        nav ul.slide {
                transform: translateX(0);
            }
    }

- jangan lupa buat script.js seperti di bawah 

    - mengambil elemen pada class menu-toggle input 

        const menuToggle = document.querySelector('.menu-toggle input');

    -mengambil elemen pada class nav ul 

        const nav = document.querySelector('nav ul');

    menuToggle.addEventListener('click', function () {
        nav.classList.toggle('slide');
    });

    dibaca, kalau menuToggle diklik, jalankan fungsi berikut ini {
        ambil nav, ambil class list nya, kita toggle (kalau ada class nya dihilangkan, kalau tdk ada class nya ditambahkan), class yang ditambahkan adalah class="slide"
    }
